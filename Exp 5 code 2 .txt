Exp 5 code 2 
import java.math.BigInteger; 
import java.util.Scanner; 
 
public class RSA { 
    public static void main(String[] args) { 
        Scanner scanner = new Scanner(System.in); 
         
        int p, q, n, z, d = 0, e, i; 
        int msg; 
        double c; 
        BigInteger msgback; 
 
        System.out.print("Enter the first prime number (p): "); 
        p = scanner.nextInt(); 
 
        System.out.print("Enter the second prime number (q): "); 
        q = scanner.nextInt(); 
 
        n = p * q; 
        z = (p - 1) * (q - 1); 
 
        System.out.println("The value of z = " + z); 
 
        for (e = 2; e < z; e++) { 
            if (gcd(e, z) == 1) { 
                break; 
            } 
        } 
 
        System.out.println("The value of e = " + e); 
 
        for (i = 0; i <= 9; i++) { 
            int x = 1 + (i * z); 
            if (x % e == 0) { 
                d = x / e; 
                break; 
            } 
        } 
 
        System.out.println("The value of d = " + d); 
 
        System.out.print("Enter the number to be encrypted and decrypted: "); 
        msg = scanner.nextInt(); 
 
        c = Math.pow(msg, e) % n; 
        System.out.println("Encrypted message is : " + c); 
 
        BigInteger N = BigInteger.valueOf(n); 
        BigInteger C = BigInteger.valueOf((long) c); 
        msgback = C.pow(d).mod(N); 
 
        System.out.println("Decrypted message is : " + msgback); 
 
        scanner.close(); 
    } 
 
    static int gcd(int e, int z) { 
        if (e == 0) 
            return z; 
        else 
            return gcd(z % e, e); 
    } 
} 