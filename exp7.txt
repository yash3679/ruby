import javax.crypto.Cipher; 
import javax.crypto.KeyGenerator; 
import javax.crypto.SecretKey; 
import javax.crypto.spec.IvParameterSpec; 
import java.util.Base64; 
import java.util.Scanner; 
 
public class AESExample { 
    public static void main(String[] args) { 
        try { 
            System.out.println("Message Encryption Using AES Algorithm\n-------"); 
 
            // Generate AES key 
            KeyGenerator keyGen = KeyGenerator.getInstance("AES"); 
            keyGen.init(128); // Using 128 bit AES 
            SecretKey secretKey = keyGen.generateKey(); 
 
            // Generate Initialization Vector (IV) 
            byte[] iv = new byte[16]; 
            // You should NEVER use the same IV for multiple encryptions due to security vulnerabilities. 
            // For demonstration purposes, we use a fixed IV here. 
            IvParameterSpec ivParameterSpec = new IvParameterSpec(iv); 
 
            // Get message from user 
            Scanner scanner = new Scanner(System.in); 
            System.out.print("Enter the message to be encrypted: "); 
            String originalMessage = scanner.nextLine(); 
 
            // Encrypt the message 
            byte[] encryptedMessage = encrypt(originalMessage, secretKey, ivParameterSpec); 
 
            // Decrypt the message 
            String decryptedMessage = decrypt(encryptedMessage, secretKey, ivParameterSpec); 
 
            System.out.println("Original Message: " + originalMessage); 
            System.out.println("Encrypted Message: " + 
Base64.getEncoder().encodeToString(encryptedMessage)); 
            System.out.println("Decrypted Message: " + decryptedMessage); 
        } catch (Exception e) { 
            e.printStackTrace(); 
        } 
    } 
 
    public static byte[] encrypt(String message, SecretKey secretKey, IvParameterSpec 
ivParameterSpec) throws Exception { 
        Cipher cipher = Cipher.getInstance("AES/CBC/PKCS5Padding"); 
        cipher.init(Cipher.ENCRYPT_MODE, secretKey, ivParameterSpec); 
        return cipher.doFinal(message.getBytes()); 
    } 
 
    public static String decrypt(byte[] encryptedMessage, SecretKey secretKey, IvParameterSpec 
ivParameterSpec) throws Exception { 
        Cipher cipher = Cipher.getInstance("AES/CBC/PKCS5Padding"); 
        cipher.init(Cipher.DECRYPT_MODE, secretKey, ivParameterSpec); 
        byte[] decryptedBytes = cipher.doFinal(encryptedMessage); 
        return new String(decryptedBytes); 
    } 
}